plugins {
	id 'eclipse'
}

eclipse.project.natures 'org.eclipse.pde.PluginNature'

tasks.named('processTestResources') {
	def testdata = project(':com.ibm.wala.core.testdata')
	dependsOn testdata.tasks.named('compileTestJava')

	from testdata.collectJLex
	from testdata.collectTestData
	from testdata.downloadJavaCup
	from testdata.extractBcel
	from testdata.generateHelloHashJar
	from testdata.extractKawa
	from testdata.buildChessJar
	from testdata.buildKawaTestJar
}

dependencies {
	testImplementation(
			'junit:junit:4.12',
			'org.apache.ant:ant:1.10.7',
			'org.hamcrest:hamcrest-core:2.2',
			'org.osgi:org.osgi.core:6.0.0',
			project(':com.ibm.wala.core'),
			project(':com.ibm.wala.shrike'),
			project(':com.ibm.wala.util'),
			testFixtures(project(':com.ibm.wala.testutil')),
	)
}

tasks.named('test') {
	maxHeapSize = '1500M'
	systemProperty 'com.ibm.wala.junit.analyzingJar', 'true'
	systemProperty 'com.ibm.wala.junit.profile', 'short'
	classpath += files project(':com.ibm.wala.core.testdata').sourceSets.test.java.outputDir
	testLogging {
		exceptionFormat = 'full'
	}
	// temporarily turn off some tests on JDK 11
	if (JavaVersion.current() == JavaVersion.VERSION_11) {
		exclude '**/callGraph/CallGraphTest.class'
		exclude '**/callGraph/Java7CallGraphTest.class'
		exclude '**/callGraph/CloneTest.class'
		exclude '**/callGraph/DebuggingBitsetCallGraphTest.class'
		exclude '**/callGraph/KawaCallGraphTest.class'
		exclude '**/exceptionpruning/ExceptionAnalysisTest.class'
		exclude '**/exceptionpruning/ExceptionAnalysis2EdgeFilterTest.class'
		exclude '**/cha/LibraryVersionTest.class'
		exclude '**/ir/TypeAnnotationTest.class'
	}
}

tasks.register('cleanTestExtras', Delete) {
	delete 'report'
}

tasks.named('cleanTest') {
	dependsOn 'cleanTestExtras'
}
