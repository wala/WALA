plugins {
	id 'eclipse'
}

eclipse.project.natures 'org.eclipse.pde.PluginNature'

sourceSets.main.java.srcDirs = ['source/java']

dependencies {
	api(project(':com.ibm.wala.core')) {
		because 'public method AstCGNode.addTarget receives an argument of type CGNode'
	}
	implementation(
			'commons-io:commons-io:2.4',
			project(':com.ibm.wala.shrike'),
			project(':com.ibm.wala.util'),
	)
}

tasks.named('javadoc') {
	def jsName = ':com.ibm.wala.cast.js'
	dependsOn "$jsName:compileJava"
	dependsOn "$jsName:createPackageList"

	doFirst {
		def js = project(jsName)
		classpath += files js.compileJava
		options.linksOffline js.javadoc.outputDirectory.path, js.createPackageList.packageList.parent
	}
}

// TODO: if we eventually stop supporting Maven, then we may be able
// to discard the "copyJarsIntoLib" task and the corresponding lines
// in "META-INF/MANIFEST.MF" and "build.properties"

tasks.register('copyJarsIntoLib', Sync) {
	def commonsIoJar = configurations.runtimeClasspath.files[1]
	assert commonsIoJar.name.startsWith('commons-io-')
	from commonsIoJar
	into 'lib'
}

tasks.named('assemble') {
	dependsOn 'copyJarsIntoLib'
}

tasks.named('clean') {
	dependsOn 'cleanCopyJarsIntoLib'
}

apply from: rootProject.file("gradle-mvn-push.gradle")
