dependencies {
	api(project(':com.ibm.wala.cast.js')) {
		because 'public class NodejsCallGraphBuilderUtil extends class JSCallGraphUtil'
	}
	implementation(
			'commons-io:commons-io:2.6',
			'org.json:json:20190722',
			project(':com.ibm.wala.cast'),
			project(':com.ibm.wala.cast.js.rhino'),
			project(':com.ibm.wala.core'),
			project(':com.ibm.wala.util'),
	)
	testImplementation(
			'junit:junit:4.13',
	)
}

final def downloadNodeJS = tasks.register('downloadNodeJS', VerifiedDownload) {
	src 'https://api.github.com/repos/nodejs/node/zipball/0a604e92e258c5ee2752d763e50721e35053f135'
	dest "$temporaryDir/nodejs.zip"
	checksum '33c5ba7a5d45644e70d268d8ad3e57df'
}

tasks.register('unpackNodeJSLib', Copy) {
	from(downloadNodeJS.map { zipTree it.dest }) {
		include 'nodejs-node-0a604e9/lib/*.js'
		eachFile {
			relativePath RelativePath.parse(!directory, relativePath.lastName)
		}
	}

	into "${tasks.named('processResources', Copy).get().destinationDir}/core-modules"
	includeEmptyDirs false
}

tasks.named('processResources') {
	dependsOn 'unpackNodeJSLib'
}

tasks.named('test') {
	maxHeapSize = '800M'

	// fails with java.lang.OutOfMemoryError for unknown reasons
	exclude '**/NodejsRequireTargetSelectorResolveTest.class'
}
