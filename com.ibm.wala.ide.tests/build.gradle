plugins {
	id 'com.diffplug.eclipse.mavencentral'
	id 'com.github.hauner.jarTest' version '1.0.1'
	id 'eclipse'
}

eclipse.project.natures 'org.eclipse.pde.PluginNature'

eclipseMavenCentral {
	release eclipseVersion, {
		[
				'org.eclipse.core.commands',
				'org.eclipse.core.jobs',
				'org.eclipse.core.resources',
				'org.eclipse.core.runtime',
				'org.eclipse.equinox.common',
				'org.eclipse.jface',
				'org.eclipse.osgi',
				'org.eclipse.ui.ide',
		].each { dep 'testImplementation', it }
		useNativesForRunningPlatform()
	}
}

dependencies {
	testImplementation(
			'org.eclipse.platform:org.eclipse.osgi:3.17.0',
			project(':com.ibm.wala.core'),
			project(':com.ibm.wala.ide'),
			project(':com.ibm.wala.util'),
	)
	testImplementation('org.eclipse.platform:org.eclipse.ui.workbench') {
		version { strictly '3.120.0' }
	}
	testImplementation(
			'junit:junit:4.13.2',
			'org.hamcrest:hamcrest:2.2',
	)
	testRuntimeOnly testFixtures(project(':com.ibm.wala.core'))
}

configurations.all {
	resolutionStrategy.dependencySubstitution {
		substitute module('org.eclipse.platform:org.eclipse.osgi.services') using module('org.eclipse.platform:org.eclipse.osgi:3.17.0') because 'both provide several of the same classes, but org.eclipse.osgi includes everything we need from both'
		substitute module('xml-apis:xml-apis-ext') using module('org.eclipse.birt.runtime:org.w3c.css.sac:1.3.1.v200903091627') because 'both provide several of the same classes, but org.w3c.css.sac includes everything we need from both'
	}
}

tasks.named('test') {
	if (System.getProperty('os.name').startsWith("Mac OS X")) {
		// Required for running SWT code
		jvmArgs = ["-XstartOnFirstThread"]
	}
}

// This is required for IFDSExplorereExample to work correctly
tasks.named('processTestResources') {
	def testdata = project(':com.ibm.wala.core')

	from testdata.collectTestData
	from(testdata.sourceSets.test.resources) {
		include 'wala.testdata.txt'
	}
}

// Task to make it easier to run IFDSExplorerExample.  Command-line arguments are passed via
// the "args" Gradle project property, e.g. (on a Mac):
// `./gradlew :com.ibm.wala.ide.tests:runIFDSExplorerExample -Pargs="-dotExe /usr/local/bin/dot -viewerExe /usr/bin/open"`
tasks.register('runIFDSExplorerExample', JavaExec) {
	group = "Execution"
	description = "Run the IFDSExplorerExample driver"
	classpath = sourceSets.test.runtimeClasspath
	mainClass = "com.ibm.wala.examples.drivers.IFDSExplorerExample"
	if (System.getProperty('os.name').startsWith("Mac OS X")) {
		jvmArgs = ["-XstartOnFirstThread"]
	}
	if (project.hasProperty("args")) {
		args project.getProperty("args").split()
	}
}
